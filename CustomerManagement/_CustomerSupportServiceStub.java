package CustomerManagement;


/**
* CustomerManagement/_CustomerSupportServiceStub.java .
* Generated by the IDL-to-Java compiler (portable), version "3.2"
* from D:/java/cms/src/idl/CustomerManagement.idl
* Thursday, March 13, 2025 1:52:43 PM ICT
*/

public class _CustomerSupportServiceStub extends org.omg.CORBA.portable.ObjectImpl implements CustomerManagement.CustomerSupportService
{

  public boolean createSupportRequest (CustomerManagement.SupportRequest request)
  {
            org.omg.CORBA.portable.InputStream $in = null;
            try {
                org.omg.CORBA.portable.OutputStream $out = _request ("createSupportRequest", true);
                CustomerManagement.SupportRequestHelper.write ($out, request);
                $in = _invoke ($out);
                boolean $result = $in.read_boolean ();
                return $result;
            } catch (org.omg.CORBA.portable.ApplicationException $ex) {
                $in = $ex.getInputStream ();
                String _id = $ex.getId ();
                throw new org.omg.CORBA.MARSHAL (_id);
            } catch (org.omg.CORBA.portable.RemarshalException $rm) {
                return createSupportRequest (request        );
            } finally {
                _releaseReply ($in);
            }
  } // createSupportRequest

  public boolean updateSupportRequest (CustomerManagement.SupportRequest request)
  {
            org.omg.CORBA.portable.InputStream $in = null;
            try {
                org.omg.CORBA.portable.OutputStream $out = _request ("updateSupportRequest", true);
                CustomerManagement.SupportRequestHelper.write ($out, request);
                $in = _invoke ($out);
                boolean $result = $in.read_boolean ();
                return $result;
            } catch (org.omg.CORBA.portable.ApplicationException $ex) {
                $in = $ex.getInputStream ();
                String _id = $ex.getId ();
                throw new org.omg.CORBA.MARSHAL (_id);
            } catch (org.omg.CORBA.portable.RemarshalException $rm) {
                return updateSupportRequest (request        );
            } finally {
                _releaseReply ($in);
            }
  } // updateSupportRequest

  public CustomerManagement.SupportRequest getSupportRequestById (String requestId)
  {
            org.omg.CORBA.portable.InputStream $in = null;
            try {
                org.omg.CORBA.portable.OutputStream $out = _request ("getSupportRequestById", true);
                $out.write_string (requestId);
                $in = _invoke ($out);
                CustomerManagement.SupportRequest $result = CustomerManagement.SupportRequestHelper.read ($in);
                return $result;
            } catch (org.omg.CORBA.portable.ApplicationException $ex) {
                $in = $ex.getInputStream ();
                String _id = $ex.getId ();
                throw new org.omg.CORBA.MARSHAL (_id);
            } catch (org.omg.CORBA.portable.RemarshalException $rm) {
                return getSupportRequestById (requestId        );
            } finally {
                _releaseReply ($in);
            }
  } // getSupportRequestById

  public CustomerManagement.SupportRequest[] getAllSupportRequests ()
  {
            org.omg.CORBA.portable.InputStream $in = null;
            try {
                org.omg.CORBA.portable.OutputStream $out = _request ("getAllSupportRequests", true);
                $in = _invoke ($out);
                CustomerManagement.SupportRequest $result[] = CustomerManagement.SupportRequestListHelper.read ($in);
                return $result;
            } catch (org.omg.CORBA.portable.ApplicationException $ex) {
                $in = $ex.getInputStream ();
                String _id = $ex.getId ();
                throw new org.omg.CORBA.MARSHAL (_id);
            } catch (org.omg.CORBA.portable.RemarshalException $rm) {
                return getAllSupportRequests (        );
            } finally {
                _releaseReply ($in);
            }
  } // getAllSupportRequests

  public CustomerManagement.SupportRequest[] getSupportRequestsByCustomer (String customerId)
  {
            org.omg.CORBA.portable.InputStream $in = null;
            try {
                org.omg.CORBA.portable.OutputStream $out = _request ("getSupportRequestsByCustomer", true);
                $out.write_string (customerId);
                $in = _invoke ($out);
                CustomerManagement.SupportRequest $result[] = CustomerManagement.SupportRequestListHelper.read ($in);
                return $result;
            } catch (org.omg.CORBA.portable.ApplicationException $ex) {
                $in = $ex.getInputStream ();
                String _id = $ex.getId ();
                throw new org.omg.CORBA.MARSHAL (_id);
            } catch (org.omg.CORBA.portable.RemarshalException $rm) {
                return getSupportRequestsByCustomer (customerId        );
            } finally {
                _releaseReply ($in);
            }
  } // getSupportRequestsByCustomer

  public CustomerManagement.SupportRequest[] getSupportRequestsByStatus (String status)
  {
            org.omg.CORBA.portable.InputStream $in = null;
            try {
                org.omg.CORBA.portable.OutputStream $out = _request ("getSupportRequestsByStatus", true);
                $out.write_string (status);
                $in = _invoke ($out);
                CustomerManagement.SupportRequest $result[] = CustomerManagement.SupportRequestListHelper.read ($in);
                return $result;
            } catch (org.omg.CORBA.portable.ApplicationException $ex) {
                $in = $ex.getInputStream ();
                String _id = $ex.getId ();
                throw new org.omg.CORBA.MARSHAL (_id);
            } catch (org.omg.CORBA.portable.RemarshalException $rm) {
                return getSupportRequestsByStatus (status        );
            } finally {
                _releaseReply ($in);
            }
  } // getSupportRequestsByStatus

  public String createComplaint (CustomerManagement.ComplaintInfo complaint)
  {
            org.omg.CORBA.portable.InputStream $in = null;
            try {
                org.omg.CORBA.portable.OutputStream $out = _request ("createComplaint", true);
                CustomerManagement.ComplaintInfoHelper.write ($out, complaint);
                $in = _invoke ($out);
                String $result = $in.read_string ();
                return $result;
            } catch (org.omg.CORBA.portable.ApplicationException $ex) {
                $in = $ex.getInputStream ();
                String _id = $ex.getId ();
                throw new org.omg.CORBA.MARSHAL (_id);
            } catch (org.omg.CORBA.portable.RemarshalException $rm) {
                return createComplaint (complaint        );
            } finally {
                _releaseReply ($in);
            }
  } // createComplaint

  public boolean updateComplaint (CustomerManagement.ComplaintInfo complaint)
  {
            org.omg.CORBA.portable.InputStream $in = null;
            try {
                org.omg.CORBA.portable.OutputStream $out = _request ("updateComplaint", true);
                CustomerManagement.ComplaintInfoHelper.write ($out, complaint);
                $in = _invoke ($out);
                boolean $result = $in.read_boolean ();
                return $result;
            } catch (org.omg.CORBA.portable.ApplicationException $ex) {
                $in = $ex.getInputStream ();
                String _id = $ex.getId ();
                throw new org.omg.CORBA.MARSHAL (_id);
            } catch (org.omg.CORBA.portable.RemarshalException $rm) {
                return updateComplaint (complaint        );
            } finally {
                _releaseReply ($in);
            }
  } // updateComplaint

  public CustomerManagement.ComplaintInfo getComplaintById (String complaintId)
  {
            org.omg.CORBA.portable.InputStream $in = null;
            try {
                org.omg.CORBA.portable.OutputStream $out = _request ("getComplaintById", true);
                $out.write_string (complaintId);
                $in = _invoke ($out);
                CustomerManagement.ComplaintInfo $result = CustomerManagement.ComplaintInfoHelper.read ($in);
                return $result;
            } catch (org.omg.CORBA.portable.ApplicationException $ex) {
                $in = $ex.getInputStream ();
                String _id = $ex.getId ();
                throw new org.omg.CORBA.MARSHAL (_id);
            } catch (org.omg.CORBA.portable.RemarshalException $rm) {
                return getComplaintById (complaintId        );
            } finally {
                _releaseReply ($in);
            }
  } // getComplaintById

  public CustomerManagement.ComplaintInfo[] getAllComplaints ()
  {
            org.omg.CORBA.portable.InputStream $in = null;
            try {
                org.omg.CORBA.portable.OutputStream $out = _request ("getAllComplaints", true);
                $in = _invoke ($out);
                CustomerManagement.ComplaintInfo $result[] = CustomerManagement.ComplaintInfoListHelper.read ($in);
                return $result;
            } catch (org.omg.CORBA.portable.ApplicationException $ex) {
                $in = $ex.getInputStream ();
                String _id = $ex.getId ();
                throw new org.omg.CORBA.MARSHAL (_id);
            } catch (org.omg.CORBA.portable.RemarshalException $rm) {
                return getAllComplaints (        );
            } finally {
                _releaseReply ($in);
            }
  } // getAllComplaints

  public CustomerManagement.ComplaintInfo[] getComplaintsByCustomer (String customerId)
  {
            org.omg.CORBA.portable.InputStream $in = null;
            try {
                org.omg.CORBA.portable.OutputStream $out = _request ("getComplaintsByCustomer", true);
                $out.write_string (customerId);
                $in = _invoke ($out);
                CustomerManagement.ComplaintInfo $result[] = CustomerManagement.ComplaintInfoListHelper.read ($in);
                return $result;
            } catch (org.omg.CORBA.portable.ApplicationException $ex) {
                $in = $ex.getInputStream ();
                String _id = $ex.getId ();
                throw new org.omg.CORBA.MARSHAL (_id);
            } catch (org.omg.CORBA.portable.RemarshalException $rm) {
                return getComplaintsByCustomer (customerId        );
            } finally {
                _releaseReply ($in);
            }
  } // getComplaintsByCustomer

  public CustomerManagement.ComplaintInfo[] getComplaintsByStatus (String status)
  {
            org.omg.CORBA.portable.InputStream $in = null;
            try {
                org.omg.CORBA.portable.OutputStream $out = _request ("getComplaintsByStatus", true);
                $out.write_string (status);
                $in = _invoke ($out);
                CustomerManagement.ComplaintInfo $result[] = CustomerManagement.ComplaintInfoListHelper.read ($in);
                return $result;
            } catch (org.omg.CORBA.portable.ApplicationException $ex) {
                $in = $ex.getInputStream ();
                String _id = $ex.getId ();
                throw new org.omg.CORBA.MARSHAL (_id);
            } catch (org.omg.CORBA.portable.RemarshalException $rm) {
                return getComplaintsByStatus (status        );
            } finally {
                _releaseReply ($in);
            }
  } // getComplaintsByStatus

  // Type-specific CORBA::Object operations
  private static String[] __ids = {
    "IDL:CustomerManagement/CustomerSupportService:1.0"};

  public String[] _ids ()
  {
    return (String[])__ids.clone ();
  }

  private void readObject (java.io.ObjectInputStream s) throws java.io.IOException
  {
     String str = s.readUTF ();
     com.sun.corba.se.impl.orbutil.IORCheckImpl.check(str, "CustomerManagement._CustomerSupportServiceStub");
     String[] args = null;
     java.util.Properties props = null;
     org.omg.CORBA.ORB orb = org.omg.CORBA.ORB.init (args, props);
   try {
     org.omg.CORBA.Object obj = orb.string_to_object (str);
     org.omg.CORBA.portable.Delegate delegate = ((org.omg.CORBA.portable.ObjectImpl) obj)._get_delegate ();
     _set_delegate (delegate);
   } finally {
     orb.destroy() ;
   }
  }

  private void writeObject (java.io.ObjectOutputStream s) throws java.io.IOException
  {
     String[] args = null;
     java.util.Properties props = null;
     org.omg.CORBA.ORB orb = org.omg.CORBA.ORB.init (args, props);
   try {
     String str = orb.object_to_string (this);
     s.writeUTF (str);
   } finally {
     orb.destroy() ;
   }
  }
} // class _CustomerSupportServiceStub
