package CustomerManagement;


/**
* CustomerManagement/_CustomerInfoServiceStub.java .
* Generated by the IDL-to-Java compiler (portable), version "3.2"
* from D:/java/cms/src/idl/CustomerManagement.idl
* Thursday, March 13, 2025 1:52:43 PM ICT
*/

public class _CustomerInfoServiceStub extends org.omg.CORBA.portable.ObjectImpl implements CustomerManagement.CustomerInfoService
{

  public boolean storeCustomerInfo (CustomerManagement.CustomerInfo customer)
  {
            org.omg.CORBA.portable.InputStream $in = null;
            try {
                org.omg.CORBA.portable.OutputStream $out = _request ("storeCustomerInfo", true);
                CustomerManagement.CustomerInfoHelper.write ($out, customer);
                $in = _invoke ($out);
                boolean $result = $in.read_boolean ();
                return $result;
            } catch (org.omg.CORBA.portable.ApplicationException $ex) {
                $in = $ex.getInputStream ();
                String _id = $ex.getId ();
                throw new org.omg.CORBA.MARSHAL (_id);
            } catch (org.omg.CORBA.portable.RemarshalException $rm) {
                return storeCustomerInfo (customer        );
            } finally {
                _releaseReply ($in);
            }
  } // storeCustomerInfo

  public boolean storeTransactionInfo (CustomerManagement.TransactionInfo transaction)
  {
            org.omg.CORBA.portable.InputStream $in = null;
            try {
                org.omg.CORBA.portable.OutputStream $out = _request ("storeTransactionInfo", true);
                CustomerManagement.TransactionInfoHelper.write ($out, transaction);
                $in = _invoke ($out);
                boolean $result = $in.read_boolean ();
                return $result;
            } catch (org.omg.CORBA.portable.ApplicationException $ex) {
                $in = $ex.getInputStream ();
                String _id = $ex.getId ();
                throw new org.omg.CORBA.MARSHAL (_id);
            } catch (org.omg.CORBA.portable.RemarshalException $rm) {
                return storeTransactionInfo (transaction        );
            } finally {
                _releaseReply ($in);
            }
  } // storeTransactionInfo

  public CustomerManagement.CustomerInfo getCustomerById (String customerId)
  {
            org.omg.CORBA.portable.InputStream $in = null;
            try {
                org.omg.CORBA.portable.OutputStream $out = _request ("getCustomerById", true);
                $out.write_string (customerId);
                $in = _invoke ($out);
                CustomerManagement.CustomerInfo $result = CustomerManagement.CustomerInfoHelper.read ($in);
                return $result;
            } catch (org.omg.CORBA.portable.ApplicationException $ex) {
                $in = $ex.getInputStream ();
                String _id = $ex.getId ();
                throw new org.omg.CORBA.MARSHAL (_id);
            } catch (org.omg.CORBA.portable.RemarshalException $rm) {
                return getCustomerById (customerId        );
            } finally {
                _releaseReply ($in);
            }
  } // getCustomerById

  public CustomerManagement.CustomerInfo[] getAllCustomers ()
  {
            org.omg.CORBA.portable.InputStream $in = null;
            try {
                org.omg.CORBA.portable.OutputStream $out = _request ("getAllCustomers", true);
                $in = _invoke ($out);
                CustomerManagement.CustomerInfo $result[] = CustomerManagement.CustomerInfoListHelper.read ($in);
                return $result;
            } catch (org.omg.CORBA.portable.ApplicationException $ex) {
                $in = $ex.getInputStream ();
                String _id = $ex.getId ();
                throw new org.omg.CORBA.MARSHAL (_id);
            } catch (org.omg.CORBA.portable.RemarshalException $rm) {
                return getAllCustomers (        );
            } finally {
                _releaseReply ($in);
            }
  } // getAllCustomers

  public CustomerManagement.CustomerInfo[] getCustomersByType (String customerType)
  {
            org.omg.CORBA.portable.InputStream $in = null;
            try {
                org.omg.CORBA.portable.OutputStream $out = _request ("getCustomersByType", true);
                $out.write_string (customerType);
                $in = _invoke ($out);
                CustomerManagement.CustomerInfo $result[] = CustomerManagement.CustomerInfoListHelper.read ($in);
                return $result;
            } catch (org.omg.CORBA.portable.ApplicationException $ex) {
                $in = $ex.getInputStream ();
                String _id = $ex.getId ();
                throw new org.omg.CORBA.MARSHAL (_id);
            } catch (org.omg.CORBA.portable.RemarshalException $rm) {
                return getCustomersByType (customerType        );
            } finally {
                _releaseReply ($in);
            }
  } // getCustomersByType

  public CustomerManagement.CustomerInfo[] getCustomersByRegion (String customerRegion)
  {
            org.omg.CORBA.portable.InputStream $in = null;
            try {
                org.omg.CORBA.portable.OutputStream $out = _request ("getCustomersByRegion", true);
                $out.write_string (customerRegion);
                $in = _invoke ($out);
                CustomerManagement.CustomerInfo $result[] = CustomerManagement.CustomerInfoListHelper.read ($in);
                return $result;
            } catch (org.omg.CORBA.portable.ApplicationException $ex) {
                $in = $ex.getInputStream ();
                String _id = $ex.getId ();
                throw new org.omg.CORBA.MARSHAL (_id);
            } catch (org.omg.CORBA.portable.RemarshalException $rm) {
                return getCustomersByRegion (customerRegion        );
            } finally {
                _releaseReply ($in);
            }
  } // getCustomersByRegion

  public CustomerManagement.CustomerInfo[] getCustomersByStatus (boolean customerStatus)
  {
            org.omg.CORBA.portable.InputStream $in = null;
            try {
                org.omg.CORBA.portable.OutputStream $out = _request ("getCustomersByStatus", true);
                $out.write_boolean (customerStatus);
                $in = _invoke ($out);
                CustomerManagement.CustomerInfo $result[] = CustomerManagement.CustomerInfoListHelper.read ($in);
                return $result;
            } catch (org.omg.CORBA.portable.ApplicationException $ex) {
                $in = $ex.getInputStream ();
                String _id = $ex.getId ();
                throw new org.omg.CORBA.MARSHAL (_id);
            } catch (org.omg.CORBA.portable.RemarshalException $rm) {
                return getCustomersByStatus (customerStatus        );
            } finally {
                _releaseReply ($in);
            }
  } // getCustomersByStatus

  public CustomerManagement.CustomerInfo[] searchCustomers (String searchTerm)
  {
            org.omg.CORBA.portable.InputStream $in = null;
            try {
                org.omg.CORBA.portable.OutputStream $out = _request ("searchCustomers", true);
                $out.write_string (searchTerm);
                $in = _invoke ($out);
                CustomerManagement.CustomerInfo $result[] = CustomerManagement.CustomerInfoListHelper.read ($in);
                return $result;
            } catch (org.omg.CORBA.portable.ApplicationException $ex) {
                $in = $ex.getInputStream ();
                String _id = $ex.getId ();
                throw new org.omg.CORBA.MARSHAL (_id);
            } catch (org.omg.CORBA.portable.RemarshalException $rm) {
                return searchCustomers (searchTerm        );
            } finally {
                _releaseReply ($in);
            }
  } // searchCustomers

  public CustomerManagement.TransactionInfo[] getCustomerTransactions (String customerId)
  {
            org.omg.CORBA.portable.InputStream $in = null;
            try {
                org.omg.CORBA.portable.OutputStream $out = _request ("getCustomerTransactions", true);
                $out.write_string (customerId);
                $in = _invoke ($out);
                CustomerManagement.TransactionInfo $result[] = CustomerManagement.TransactionInfoListHelper.read ($in);
                return $result;
            } catch (org.omg.CORBA.portable.ApplicationException $ex) {
                $in = $ex.getInputStream ();
                String _id = $ex.getId ();
                throw new org.omg.CORBA.MARSHAL (_id);
            } catch (org.omg.CORBA.portable.RemarshalException $rm) {
                return getCustomerTransactions (customerId        );
            } finally {
                _releaseReply ($in);
            }
  } // getCustomerTransactions

  public void deleteCustomer (String customerId)
  {
            org.omg.CORBA.portable.InputStream $in = null;
            try {
                org.omg.CORBA.portable.OutputStream $out = _request ("deleteCustomer", true);
                $out.write_string (customerId);
                $in = _invoke ($out);
                return;
            } catch (org.omg.CORBA.portable.ApplicationException $ex) {
                $in = $ex.getInputStream ();
                String _id = $ex.getId ();
                throw new org.omg.CORBA.MARSHAL (_id);
            } catch (org.omg.CORBA.portable.RemarshalException $rm) {
                deleteCustomer (customerId        );
            } finally {
                _releaseReply ($in);
            }
  } // deleteCustomer

  // Type-specific CORBA::Object operations
  private static String[] __ids = {
    "IDL:CustomerManagement/CustomerInfoService:1.0"};

  public String[] _ids ()
  {
    return (String[])__ids.clone ();
  }

  private void readObject (java.io.ObjectInputStream s) throws java.io.IOException
  {
     String str = s.readUTF ();
     com.sun.corba.se.impl.orbutil.IORCheckImpl.check(str, "CustomerManagement._CustomerInfoServiceStub");
     String[] args = null;
     java.util.Properties props = null;
     org.omg.CORBA.ORB orb = org.omg.CORBA.ORB.init (args, props);
   try {
     org.omg.CORBA.Object obj = orb.string_to_object (str);
     org.omg.CORBA.portable.Delegate delegate = ((org.omg.CORBA.portable.ObjectImpl) obj)._get_delegate ();
     _set_delegate (delegate);
   } finally {
     orb.destroy() ;
   }
  }

  private void writeObject (java.io.ObjectOutputStream s) throws java.io.IOException
  {
     String[] args = null;
     java.util.Properties props = null;
     org.omg.CORBA.ORB orb = org.omg.CORBA.ORB.init (args, props);
   try {
     String str = orb.object_to_string (this);
     s.writeUTF (str);
   } finally {
     orb.destroy() ;
   }
  }
} // class _CustomerInfoServiceStub
