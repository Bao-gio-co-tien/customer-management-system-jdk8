package CustomerManagement;


/**
* CustomerManagement/EmailMarketingServicePOA.java .
* Generated by the IDL-to-Java compiler (portable), version "3.2"
* from D:/java/cms/src/idl/CustomerManagement.idl
* Thursday, March 13, 2025 1:52:43 PM ICT
*/

public abstract class EmailMarketingServicePOA extends org.omg.PortableServer.Servant
 implements CustomerManagement.EmailMarketingServiceOperations, org.omg.CORBA.portable.InvokeHandler
{

  // Constructors

  private static java.util.Hashtable _methods = new java.util.Hashtable ();
  static
  {
    _methods.put ("createEmailCampaign", new java.lang.Integer (0));
    _methods.put ("sendEmailCampaign", new java.lang.Integer (1));
    _methods.put ("scheduleEmailCampaign", new java.lang.Integer (2));
    _methods.put ("cancelEmailCampaign", new java.lang.Integer (3));
    _methods.put ("getAllEmailCampaigns", new java.lang.Integer (4));
    _methods.put ("getEmailMetrics", new java.lang.Integer (5));
    _methods.put ("getEmailTargets", new java.lang.Integer (6));
    _methods.put ("getCustomersByTargets", new java.lang.Integer (7));
    _methods.put ("addCustomerToEmailTarget", new java.lang.Integer (8));
  }

  public org.omg.CORBA.portable.OutputStream _invoke (String $method,
                                org.omg.CORBA.portable.InputStream in,
                                org.omg.CORBA.portable.ResponseHandler $rh)
  {
    org.omg.CORBA.portable.OutputStream out = null;
    java.lang.Integer __method = (java.lang.Integer)_methods.get ($method);
    if (__method == null)
      throw new org.omg.CORBA.BAD_OPERATION (0, org.omg.CORBA.CompletionStatus.COMPLETED_MAYBE);

    switch (__method.intValue ())
    {
       case 0:  // CustomerManagement/EmailMarketingService/createEmailCampaign
       {
         CustomerManagement.EmailCampaign campaign = CustomerManagement.EmailCampaignHelper.read (in);
         boolean $result = false;
         $result = this.createEmailCampaign (campaign);
         out = $rh.createReply();
         out.write_boolean ($result);
         break;
       }

       case 1:  // CustomerManagement/EmailMarketingService/sendEmailCampaign
       {
         String campaignId = in.read_string ();
         boolean $result = false;
         $result = this.sendEmailCampaign (campaignId);
         out = $rh.createReply();
         out.write_boolean ($result);
         break;
       }

       case 2:  // CustomerManagement/EmailMarketingService/scheduleEmailCampaign
       {
         String campaignId = in.read_string ();
         String scheduleDate = in.read_string ();
         boolean $result = false;
         $result = this.scheduleEmailCampaign (campaignId, scheduleDate);
         out = $rh.createReply();
         out.write_boolean ($result);
         break;
       }

       case 3:  // CustomerManagement/EmailMarketingService/cancelEmailCampaign
       {
         String campaignId = in.read_string ();
         boolean $result = false;
         $result = this.cancelEmailCampaign (campaignId);
         out = $rh.createReply();
         out.write_boolean ($result);
         break;
       }

       case 4:  // CustomerManagement/EmailMarketingService/getAllEmailCampaigns
       {
         CustomerManagement.EmailCampaign $result[] = null;
         $result = this.getAllEmailCampaigns ();
         out = $rh.createReply();
         CustomerManagement.EmailCampaignListHelper.write (out, $result);
         break;
       }

       case 5:  // CustomerManagement/EmailMarketingService/getEmailMetrics
       {
         String campaignId = in.read_string ();
         CustomerManagement.EmailMetrics $result[] = null;
         $result = this.getEmailMetrics (campaignId);
         out = $rh.createReply();
         CustomerManagement.EmailMetricsListHelper.write (out, $result);
         break;
       }

       case 6:  // CustomerManagement/EmailMarketingService/getEmailTargets
       {
         String campaignId = in.read_string ();
         String $result[] = null;
         $result = this.getEmailTargets (campaignId);
         out = $rh.createReply();
         CustomerManagement.StringListHelper.write (out, $result);
         break;
       }

       case 7:  // CustomerManagement/EmailMarketingService/getCustomersByTargets
       {
         String targetCustomer = in.read_string ();
         CustomerManagement.CustomerInfo $result[] = null;
         $result = this.getCustomersByTargets (targetCustomer);
         out = $rh.createReply();
         CustomerManagement.CustomerInfoListHelper.write (out, $result);
         break;
       }

       case 8:  // CustomerManagement/EmailMarketingService/addCustomerToEmailTarget
       {
         String campaignId = in.read_string ();
         String targetCustomer = in.read_string ();
         boolean $result = false;
         $result = this.addCustomerToEmailTarget (campaignId, targetCustomer);
         out = $rh.createReply();
         out.write_boolean ($result);
         break;
       }

       default:
         throw new org.omg.CORBA.BAD_OPERATION (0, org.omg.CORBA.CompletionStatus.COMPLETED_MAYBE);
    }

    return out;
  } // _invoke

  // Type-specific CORBA::Object operations
  private static String[] __ids = {
    "IDL:CustomerManagement/EmailMarketingService:1.0"};

  public String[] _all_interfaces (org.omg.PortableServer.POA poa, byte[] objectId)
  {
    return (String[])__ids.clone ();
  }

  public EmailMarketingService _this() 
  {
    return EmailMarketingServiceHelper.narrow(
    super._this_object());
  }

  public EmailMarketingService _this(org.omg.CORBA.ORB orb) 
  {
    return EmailMarketingServiceHelper.narrow(
    super._this_object(orb));
  }


} // class EmailMarketingServicePOA
