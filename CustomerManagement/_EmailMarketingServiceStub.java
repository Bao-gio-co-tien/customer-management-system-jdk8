package CustomerManagement;


/**
* CustomerManagement/_EmailMarketingServiceStub.java .
* Generated by the IDL-to-Java compiler (portable), version "3.2"
* from D:/java/cms/src/idl/CustomerManagement.idl
* Thursday, March 13, 2025 1:52:43 PM ICT
*/

public class _EmailMarketingServiceStub extends org.omg.CORBA.portable.ObjectImpl implements CustomerManagement.EmailMarketingService
{

  public boolean createEmailCampaign (CustomerManagement.EmailCampaign campaign)
  {
            org.omg.CORBA.portable.InputStream $in = null;
            try {
                org.omg.CORBA.portable.OutputStream $out = _request ("createEmailCampaign", true);
                CustomerManagement.EmailCampaignHelper.write ($out, campaign);
                $in = _invoke ($out);
                boolean $result = $in.read_boolean ();
                return $result;
            } catch (org.omg.CORBA.portable.ApplicationException $ex) {
                $in = $ex.getInputStream ();
                String _id = $ex.getId ();
                throw new org.omg.CORBA.MARSHAL (_id);
            } catch (org.omg.CORBA.portable.RemarshalException $rm) {
                return createEmailCampaign (campaign        );
            } finally {
                _releaseReply ($in);
            }
  } // createEmailCampaign

  public boolean sendEmailCampaign (String campaignId)
  {
            org.omg.CORBA.portable.InputStream $in = null;
            try {
                org.omg.CORBA.portable.OutputStream $out = _request ("sendEmailCampaign", true);
                $out.write_string (campaignId);
                $in = _invoke ($out);
                boolean $result = $in.read_boolean ();
                return $result;
            } catch (org.omg.CORBA.portable.ApplicationException $ex) {
                $in = $ex.getInputStream ();
                String _id = $ex.getId ();
                throw new org.omg.CORBA.MARSHAL (_id);
            } catch (org.omg.CORBA.portable.RemarshalException $rm) {
                return sendEmailCampaign (campaignId        );
            } finally {
                _releaseReply ($in);
            }
  } // sendEmailCampaign

  public boolean scheduleEmailCampaign (String campaignId, String scheduleDate)
  {
            org.omg.CORBA.portable.InputStream $in = null;
            try {
                org.omg.CORBA.portable.OutputStream $out = _request ("scheduleEmailCampaign", true);
                $out.write_string (campaignId);
                $out.write_string (scheduleDate);
                $in = _invoke ($out);
                boolean $result = $in.read_boolean ();
                return $result;
            } catch (org.omg.CORBA.portable.ApplicationException $ex) {
                $in = $ex.getInputStream ();
                String _id = $ex.getId ();
                throw new org.omg.CORBA.MARSHAL (_id);
            } catch (org.omg.CORBA.portable.RemarshalException $rm) {
                return scheduleEmailCampaign (campaignId, scheduleDate        );
            } finally {
                _releaseReply ($in);
            }
  } // scheduleEmailCampaign

  public boolean cancelEmailCampaign (String campaignId)
  {
            org.omg.CORBA.portable.InputStream $in = null;
            try {
                org.omg.CORBA.portable.OutputStream $out = _request ("cancelEmailCampaign", true);
                $out.write_string (campaignId);
                $in = _invoke ($out);
                boolean $result = $in.read_boolean ();
                return $result;
            } catch (org.omg.CORBA.portable.ApplicationException $ex) {
                $in = $ex.getInputStream ();
                String _id = $ex.getId ();
                throw new org.omg.CORBA.MARSHAL (_id);
            } catch (org.omg.CORBA.portable.RemarshalException $rm) {
                return cancelEmailCampaign (campaignId        );
            } finally {
                _releaseReply ($in);
            }
  } // cancelEmailCampaign

  public CustomerManagement.EmailCampaign[] getAllEmailCampaigns ()
  {
            org.omg.CORBA.portable.InputStream $in = null;
            try {
                org.omg.CORBA.portable.OutputStream $out = _request ("getAllEmailCampaigns", true);
                $in = _invoke ($out);
                CustomerManagement.EmailCampaign $result[] = CustomerManagement.EmailCampaignListHelper.read ($in);
                return $result;
            } catch (org.omg.CORBA.portable.ApplicationException $ex) {
                $in = $ex.getInputStream ();
                String _id = $ex.getId ();
                throw new org.omg.CORBA.MARSHAL (_id);
            } catch (org.omg.CORBA.portable.RemarshalException $rm) {
                return getAllEmailCampaigns (        );
            } finally {
                _releaseReply ($in);
            }
  } // getAllEmailCampaigns

  public CustomerManagement.EmailMetrics[] getEmailMetrics (String campaignId)
  {
            org.omg.CORBA.portable.InputStream $in = null;
            try {
                org.omg.CORBA.portable.OutputStream $out = _request ("getEmailMetrics", true);
                $out.write_string (campaignId);
                $in = _invoke ($out);
                CustomerManagement.EmailMetrics $result[] = CustomerManagement.EmailMetricsListHelper.read ($in);
                return $result;
            } catch (org.omg.CORBA.portable.ApplicationException $ex) {
                $in = $ex.getInputStream ();
                String _id = $ex.getId ();
                throw new org.omg.CORBA.MARSHAL (_id);
            } catch (org.omg.CORBA.portable.RemarshalException $rm) {
                return getEmailMetrics (campaignId        );
            } finally {
                _releaseReply ($in);
            }
  } // getEmailMetrics

  public String[] getEmailTargets (String campaignId)
  {
            org.omg.CORBA.portable.InputStream $in = null;
            try {
                org.omg.CORBA.portable.OutputStream $out = _request ("getEmailTargets", true);
                $out.write_string (campaignId);
                $in = _invoke ($out);
                String $result[] = CustomerManagement.StringListHelper.read ($in);
                return $result;
            } catch (org.omg.CORBA.portable.ApplicationException $ex) {
                $in = $ex.getInputStream ();
                String _id = $ex.getId ();
                throw new org.omg.CORBA.MARSHAL (_id);
            } catch (org.omg.CORBA.portable.RemarshalException $rm) {
                return getEmailTargets (campaignId        );
            } finally {
                _releaseReply ($in);
            }
  } // getEmailTargets

  public CustomerManagement.CustomerInfo[] getCustomersByTargets (String targetCustomer)
  {
            org.omg.CORBA.portable.InputStream $in = null;
            try {
                org.omg.CORBA.portable.OutputStream $out = _request ("getCustomersByTargets", true);
                $out.write_string (targetCustomer);
                $in = _invoke ($out);
                CustomerManagement.CustomerInfo $result[] = CustomerManagement.CustomerInfoListHelper.read ($in);
                return $result;
            } catch (org.omg.CORBA.portable.ApplicationException $ex) {
                $in = $ex.getInputStream ();
                String _id = $ex.getId ();
                throw new org.omg.CORBA.MARSHAL (_id);
            } catch (org.omg.CORBA.portable.RemarshalException $rm) {
                return getCustomersByTargets (targetCustomer        );
            } finally {
                _releaseReply ($in);
            }
  } // getCustomersByTargets

  public boolean addCustomerToEmailTarget (String campaignId, String targetCustomer)
  {
            org.omg.CORBA.portable.InputStream $in = null;
            try {
                org.omg.CORBA.portable.OutputStream $out = _request ("addCustomerToEmailTarget", true);
                $out.write_string (campaignId);
                $out.write_string (targetCustomer);
                $in = _invoke ($out);
                boolean $result = $in.read_boolean ();
                return $result;
            } catch (org.omg.CORBA.portable.ApplicationException $ex) {
                $in = $ex.getInputStream ();
                String _id = $ex.getId ();
                throw new org.omg.CORBA.MARSHAL (_id);
            } catch (org.omg.CORBA.portable.RemarshalException $rm) {
                return addCustomerToEmailTarget (campaignId, targetCustomer        );
            } finally {
                _releaseReply ($in);
            }
  } // addCustomerToEmailTarget

  // Type-specific CORBA::Object operations
  private static String[] __ids = {
    "IDL:CustomerManagement/EmailMarketingService:1.0"};

  public String[] _ids ()
  {
    return (String[])__ids.clone ();
  }

  private void readObject (java.io.ObjectInputStream s) throws java.io.IOException
  {
     String str = s.readUTF ();
     com.sun.corba.se.impl.orbutil.IORCheckImpl.check(str, "CustomerManagement._EmailMarketingServiceStub");
     String[] args = null;
     java.util.Properties props = null;
     org.omg.CORBA.ORB orb = org.omg.CORBA.ORB.init (args, props);
   try {
     org.omg.CORBA.Object obj = orb.string_to_object (str);
     org.omg.CORBA.portable.Delegate delegate = ((org.omg.CORBA.portable.ObjectImpl) obj)._get_delegate ();
     _set_delegate (delegate);
   } finally {
     orb.destroy() ;
   }
  }

  private void writeObject (java.io.ObjectOutputStream s) throws java.io.IOException
  {
     String[] args = null;
     java.util.Properties props = null;
     org.omg.CORBA.ORB orb = org.omg.CORBA.ORB.init (args, props);
   try {
     String str = orb.object_to_string (this);
     s.writeUTF (str);
   } finally {
     orb.destroy() ;
   }
  }
} // class _EmailMarketingServiceStub
